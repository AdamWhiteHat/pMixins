//----------------------------------------------------------------------- 
// <copyright file="ExternalGeneratedNamespaceHelper.cs" company="Copacetic Software"> 
// Copyright (c) Copacetic Software.  
// <author>Philip Pittle</author> 
// <date>Friday, February 28, 2014 10:16:06 PM</date> 
// Licensed under the Apache License, Version 2.0,
// you may not use this file except in compliance with this License.
//  
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright> 
//-----------------------------------------------------------------------

using CopaceticSoftware.Common.Extensions;
using CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCode.Steps;
using ICSharpCode.NRefactory.CSharp;

namespace CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCode.Infrastructure
{
    public static class ExternalGeneratedNamespaceHelper
    {
        private const string AutogeneratedNamespacePrefix = "pMixin.AutoGenerated.";

        public static string GenerateNamespace(pMixinGeneratorPipelineState manager)
        {
            var parentNamespaceDeclaration = manager.SourceClass.GetParent<NamespaceDeclaration>()
                                             ?? new NamespaceDeclaration("Unknown");

            return
                AutogeneratedNamespacePrefix +
                parentNamespaceDeclaration.FullName + "." + manager.SourceClass.Name
                + "."
                + manager.CurrentpMixinAttribute.Mixin.FullName;
        }

        public static string GenerateChildClassFullName(pMixinGeneratorPipelineState manager, string className)
        {
            return GenerateNamespace(manager).EnsureStartsWith("global::").EnsureEndsWith(".") +
                   className;
        }
    }
}

//----------------------------------------------------------------------- 
// <copyright file="AutoGeneratedCommentMessage.cs" company="Copacetic Software"> 
// Copyright (c) Copacetic Software.  
// <author>Philip Pittle</author> 
// <date>Sunday, January 26, 2014 12:03:09 AM</date> 
// Licensed under the Apache License, Version 2.0,
// you may not use this file except in compliance with this License.
//  
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright> 
//-----------------------------------------------------------------------

using System;
using System.IO;
using System.Reflection;
using CopaceticSoftware.CodeGenerator.StarterKit.Extensions;
using CopaceticSoftware.Common.Patterns;
using ICSharpCode.NRefactory.CSharp;

namespace CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCode.Steps
{
    public class AutoGeneratedCommentMessage : IPipelineStep<ICodeGenerationPipelineState>
    {
        public bool PerformTask(ICodeGenerationPipelineState manager)
        {
            var relativeFilePath =
                PathExtensions.MakeRelativePath(
                    Path.GetDirectoryName(manager.Context.Solution.FileName.FullPath),
                    manager.Context.Source.FileName.FullPath);

            var commentNode = new Comment(
                FormatHeader(relativeFilePath),
                CommentType.MultiLineDocumentation);

            manager.GeneratedCodeSyntaxTree.AddChild(commentNode, Roles.Comment);

            return true;
        }

        private static string FormatHeader(string targetFileName)
        {
            var hostingAssemblyName =
                Assembly.GetAssembly(typeof(AutoGeneratedCommentMessage)).GetName();

            return string.Format(
                Strings.AutoGeneratedCommentHeaderFormat,
                hostingAssemblyName.Name + " v" + hostingAssemblyName.Version,
                targetFileName);
        }

        
    }
}

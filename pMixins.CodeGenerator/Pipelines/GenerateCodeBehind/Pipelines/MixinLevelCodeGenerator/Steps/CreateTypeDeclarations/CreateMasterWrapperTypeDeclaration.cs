//----------------------------------------------------------------------- 
// <copyright file="CreateMasterWrapperTypeDeclaration.cs" company="Copacetic Software"> 
// Copyright (c) Copacetic Software.  
// <author>Philip Pittle</author> 
// <date>Saturday, July 26, 2014 12:01:20 PM</date> 
// Licensed under the Apache License, Version 2.0,
// you may not use this file except in compliance with this License.
//  
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright> 
//-----------------------------------------------------------------------

using CopaceticSoftware.Common.Patterns;
using CopaceticSoftware.pMixins.CodeGenerator.Infrastructure.CodeGeneratorProxy;
using CopaceticSoftware.pMixins.Infrastructure;
using ICSharpCode.NRefactory.CSharp;

namespace CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCodeBehind.Pipelines.MixinLevelCodeGenerator.Steps.CreateTypeDeclarations
{
    public class CreateMasterWrapperTypeDeclaration : IPipelineStep<MixinLevelCodeGeneratorPipelineState>
    {
        public bool PerformTask(MixinLevelCodeGeneratorPipelineState manager)
        {
            var masterWrapperTypeDeclaration = new TypeDeclaration
            {
                ClassType = ClassType.Class,
                Modifiers = Modifiers.Public,
                Name = manager.MixinGenerationPlan.MasterWrapperPlan.MasterWrapperClassName
            };

            //have master wrapper inherit from CopaceticSoftware.pMixins.Infrastructure.MasterWrapperBase
            masterWrapperTypeDeclaration.BaseTypes.Add(
                new SimpleType("global::" + typeof(MasterWrapperBase).FullName));

            //add master wrapper as a child of Mixin AutoGenerated Container Class
            new CodeGeneratorProxy(manager.MixinAutoGeneratedContainerClass)
                .AddNestedType(masterWrapperTypeDeclaration);

            
            //save master wrapper to the manager
            manager.MasterWrapper = masterWrapperTypeDeclaration;

            return true;
        }
    }
}

//----------------------------------------------------------------------- 
// <copyright file="CreateProtectedWrapperTypeDeclaration.cs" company="Copacetic Software"> 
// Copyright (c) Copacetic Software.  
// <author>Philip Pittle</author> 
// <date>Thursday, July 24, 2014 6:43:12 PM</date> 
// Licensed under the Apache License, Version 2.0,
// you may not use this file except in compliance with this License.
//  
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright> 
//-----------------------------------------------------------------------

using CopaceticSoftware.CodeGenerator.StarterKit.Extensions;
using CopaceticSoftware.Common.Patterns;
using CopaceticSoftware.pMixins.CodeGenerator.Infrastructure;
using CopaceticSoftware.pMixins.CodeGenerator.Infrastructure.CodeGeneratorProxy;
using CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCodeBehind.Pipelines.MixinLevelCodeGenerator.Steps.GenerateMembers;
using ICSharpCode.NRefactory.CSharp;
using Modifiers = ICSharpCode.NRefactory.CSharp.Modifiers;

namespace CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCodeBehind.Pipelines.MixinLevelCodeGenerator.Steps.
    CreateTypeDeclarations
{
    /// <summary>
    /// Creates the class definition for the Protected Members Wrapper
    /// and assigns it to <see cref="MixinLevelCodeGeneratorPipelineState.ProtectedMembersWrapper" />
    /// <code>
    /// <![CDATA[
    /// public abstract class ProtectedMembersWrapper : Mixin{}
    /// ]]>
    /// </code>
    /// <remarks>
    /// Members are added later in <see cref="GenerateProtectedWrapperMembers"/>
    /// </remarks>
    /// </summary>
    public class CreateProtectedWrapperTypeDeclaration : IPipelineStep<MixinLevelCodeGeneratorPipelineState>
    {
        public bool PerformTask(MixinLevelCodeGeneratorPipelineState manager)
        {
            if (!manager.MixinGenerationPlan.ProtectedWrapperPlan.GenrateProtectedWrapper)
                return true;

            var protectedWrapperTypeDeclaration = new TypeDeclaration
            {
                ClassType = ClassType.Class,
                Modifiers = Modifiers.Abstract | Modifiers.Public,
                Name = manager.MixinGenerationPlan.ProtectedWrapperPlan.ProtectedWrapperClassName
            };


            //have protected wrapper inherit from mixin
            protectedWrapperTypeDeclaration.BaseTypes.Add(
                new SimpleType(
                    manager.MixinGenerationPlan.MixinAttribute.Mixin.GetOriginalFullNameWithGlobal()));


            if (manager.MixinGenerationPlan.ProtectedWrapperPlan.GenerateProtectedWrapperInExternalNamespace)
            {
                manager.TargetLevelCodeGeneratorPipelineState.CodeBehindSyntaxTree
                    .AddChildTypeDeclaration(
                        protectedWrapperTypeDeclaration,
                        manager.ExternalMixinSpecificAutoGeneratedNamespace);
            }
            else
            {
                new CodeGeneratorProxy(
                    manager.MixinAutoGeneratedContainerClass, true)
                    .AddNestedType(protectedWrapperTypeDeclaration);
            }

            //save protected wrapper to the manager
            manager.ProtectedMembersWrapper = protectedWrapperTypeDeclaration;

            return true;
        }
    }
}

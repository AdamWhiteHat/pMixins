//----------------------------------------------------------------------- 
// <copyright file="GenerateTopLevelContainerClassForWrappers.cs" company="Copacetic Software"> 
// Copyright (c) Copacetic Software.  
// <author>Philip Pittle</author> 
// <date>Wednesday, July 23, 2014 1:49:38 PM</date> 
// Licensed under the Apache License, Version 2.0,
// you may not use this file except in compliance with this License.
//  
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright> 
//-----------------------------------------------------------------------

using CopaceticSoftware.Common.Patterns;
using CopaceticSoftware.pMixins.CodeGenerator.Infrastructure.CodeGeneratorProxy;
using CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCodeBehind.Pipelines.MixinLevelCodeGenerator.Steps.CreateTypeDeclarations;
using ICSharpCode.NRefactory.CSharp;

namespace CopaceticSoftware.pMixins.CodeGenerator.Pipelines.GenerateCodeBehind.Pipelines.TargetLevelCodeGenerator.Steps.CreateTypeDeclarations
{
    /// <summary>
    /// Generates a container class for Auto Generated wrapper classes directly
    /// in the Target (
    /// <see cref="TargetLevelCodeGeneratorPipelineState.TargetCodeBehindTypeDeclaration"/>)
    /// code-behind class:
    /// <code>
    /// <![CDATA[
    /// public partial class Target
    /// {
    ///     private sealed class __pMixinAutoGenerated { }    
    /// }
    /// ]]>
    /// </code>
    /// </summary>
    /// <remarks>
    /// Saves the <see cref="TypeDeclaration"/> in 
    /// <see cref="TargetLevelCodeGeneratorPipelineState.GlobalAutoGeneratedContainerClass"/>
    /// </remarks>
    /// <remarks>
    /// Mixin specific container classes are added in 
    /// <see cref="CreateMixinLevelAutoGeneratedContainerClass"/>
    /// </remarks>
    public class CreateGlobalAutoGeneratedContainerClass : IPipelineStep<TargetLevelCodeGeneratorPipelineState>
    {
        public bool PerformTask(TargetLevelCodeGeneratorPipelineState manager)
        {
            //Create class
            var autoGeneratedContainer = new TypeDeclaration
            {
                ClassType = ClassType.Class,
                Modifiers = Modifiers.Private | Modifiers.Sealed,
                Name = manager.CodeGenerationPlan.TargetCodeBehindPlan.GlobalAutoGeneratedContainerClassName,
            };

            //Add class to Target's Code Behind
            new CodeGeneratorProxy(manager.TargetCodeBehindTypeDeclaration)
                .AddNestedType(autoGeneratedContainer);

            //Save the class
            manager.GlobalAutoGeneratedContainerClass = autoGeneratedContainer;

            return true;
        }
    }
}

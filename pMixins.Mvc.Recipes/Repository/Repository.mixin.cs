//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CopaceticSoftware.pMixins.CodeGenerator v0.5.1.382
//      for file pMixins\pMixins.Mvc.Recipes\Repository\Repository.cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.  
// </auto-generated> 
//------------------------------------------------------------------------------
namespace pMixins.Mvc.Recipes.Repository
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute ("pMixin", "0.5.1.382")]
	public partial class MyEntityRepository : global::pMixins.Mvc.Recipes.Repository.IReadById<global::pMixins.Mvc.Recipes.Repository.MyEntity>, global::pMixins.Mvc.Recipes.Repository.ICreate<global::pMixins.Mvc.Recipes.Repository.MyEntity>, pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.ISqlReadByIdMixin__MyEntity__Requirements, pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.ISqlCreateMixin__MyEntity__Requirements, global::CopaceticSoftware.pMixins.ConversionOperators.IContainMixin<global::pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>>, global::CopaceticSoftware.pMixins.ConversionOperators.IContainMixin<global::pMixins.Mvc.Recipes.Repository.SqlCreateMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>>
	{
		private sealed class __Mixins
		{
			public static global::System.Object ____Lock = new global::System.Object ();
			public __pMixinAutoGenerated.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.SqlReadByIdMixin__MyEntity__MasterWrapper pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__;
			public __pMixinAutoGenerated.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.SqlCreateMixin__MyEntity__MasterWrapper pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__;
			public __Mixins (MyEntityRepository target)
			{
				pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__ = global::CopaceticSoftware.pMixins.Infrastructure.MixinActivatorFactory.GetCurrentActivator ().CreateInstance<__pMixinAutoGenerated.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.SqlReadByIdMixin__MyEntity__MasterWrapper> ((pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.ISqlReadByIdMixin__MyEntity__Requirements)target);
				pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__ = global::CopaceticSoftware.pMixins.Infrastructure.MixinActivatorFactory.GetCurrentActivator ().CreateInstance<__pMixinAutoGenerated.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.SqlCreateMixin__MyEntity__MasterWrapper> ((pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.ISqlCreateMixin__MyEntity__Requirements)target);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			public void __ActivateMixinDependencies (pMixins.Mvc.Recipes.Repository.MyEntityRepository target)
			{
				pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.__ActivateMixinDependencies (target);
				pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.__ActivateMixinDependencies (target);
			}
		}
		private sealed class __pMixinAutoGenerated
		{
			public sealed class pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__
			{
				public class SqlReadByIdMixin__MyEntity__MasterWrapper : global::CopaceticSoftware.pMixins.Infrastructure.MasterWrapperBase
				{
					public SqlReadByIdMixin__MyEntity__MasterWrapper (pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.ISqlReadByIdMixin__MyEntity__Requirements target)
					{
						_mixinInstance = base.TryActivateMixin<pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.SqlReadByIdMixin__MyEntity__AbstractWrapper> (target);
						ReadByIdFunc = id => _mixinInstance.ReadById (id);
						base.Initialize (target, _mixinInstance, new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.IMixinInterceptor> {

						});
					}
					public pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.SqlReadByIdMixin__MyEntity__AbstractWrapper _mixinInstance;
					public global::System.Func<global::System.Int32, global::pMixins.Mvc.Recipes.Repository.MyEntity> ReadByIdFunc {
						get;
						set;
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					public void __ActivateMixinDependencies (pMixins.Mvc.Recipes.Repository.MyEntityRepository target)
					{
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::pMixins.Mvc.Recipes.Repository.MyEntity MapEntity (global::System.Data.SqlClient.SqlDataReader reader)
					{
						return base.ExecuteMethod ("MapEntity", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "reader",
								Type = typeof(global::System.Data.SqlClient.SqlDataReader),
								Value = reader
							}
						}, () => _mixinInstance.MapEntity_Public (reader));
					}
					internal global::System.String ReadByIdStoredProcedureName {
						get {
							return base.ExecutePropertyGet ("ReadByIdStoredProcedureName", () => _mixinInstance.ReadByIdStoredProcedureName_Public);
						}
					}
					internal global::System.String ConnectionString {
						get {
							return base.ExecutePropertyGet ("ConnectionString", () => _mixinInstance.ConnectionString_Public);
						}
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::pMixins.Mvc.Recipes.Repository.MyEntity ReadById (global::System.Int32 id)
					{
						return base.ExecuteMethod ("ReadById", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "id",
								Type = typeof(global::System.Int32),
								Value = id
							}
						}, () => this.ReadByIdFunc (id));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal void ExecuteNonQuery (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
					{
						base.ExecuteVoidMethod ("ExecuteNonQuery", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							}
						}, () => _mixinInstance.ExecuteNonQuery (spName, sParams));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal void ExecuteReader (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams, global::System.Action<global::System.Data.SqlClient.SqlDataReader> readerCallback)
					{
						base.ExecuteVoidMethod ("ExecuteReader", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "readerCallback",
								Type = typeof(global::System.Action<global::System.Data.SqlClient.SqlDataReader>),
								Value = readerCallback
							}
						}, () => _mixinInstance.ExecuteReader (spName, sParams, readerCallback));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::System.Object ExecuteScalar (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
					{
						return base.ExecuteMethod ("ExecuteScalar", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							}
						}, () => _mixinInstance.ExecuteScalar (spName, sParams));
					}
				}
			}
			public sealed class pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__
			{
				public class SqlCreateMixin__MyEntity__MasterWrapper : global::CopaceticSoftware.pMixins.Infrastructure.MasterWrapperBase
				{
					public SqlCreateMixin__MyEntity__MasterWrapper (pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.ISqlCreateMixin__MyEntity__Requirements target)
					{
						_mixinInstance = base.TryActivateMixin<pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.SqlCreateMixin__MyEntity__AbstractWrapper> (target);
						CreateFunc = entity => _mixinInstance.Create (entity);
						base.Initialize (target, _mixinInstance, new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.IMixinInterceptor> {

						});
					}
					public pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.SqlCreateMixin__MyEntity__AbstractWrapper _mixinInstance;
					public global::System.Func<global::pMixins.Mvc.Recipes.Repository.MyEntity, global::System.Boolean> CreateFunc {
						get;
						set;
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					public void __ActivateMixinDependencies (pMixins.Mvc.Recipes.Repository.MyEntityRepository target)
					{
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::System.Data.SqlClient.SqlParameter[] MapEntityToSqlParameters (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
					{
						return base.ExecuteMethod ("MapEntityToSqlParameters", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "entity",
								Type = typeof(global::pMixins.Mvc.Recipes.Repository.MyEntity),
								Value = entity
							}
						}, () => _mixinInstance.MapEntityToSqlParameters_Public (entity));
					}
					internal global::System.String CreateStoredProcedureName {
						get {
							return base.ExecutePropertyGet ("CreateStoredProcedureName", () => _mixinInstance.CreateStoredProcedureName_Public);
						}
					}
					internal global::System.String ConnectionString {
						get {
							return base.ExecutePropertyGet ("ConnectionString", () => _mixinInstance.ConnectionString_Public);
						}
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::System.Boolean Create (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
					{
						return base.ExecuteMethod ("Create", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "entity",
								Type = typeof(global::pMixins.Mvc.Recipes.Repository.MyEntity),
								Value = entity
							}
						}, () => this.CreateFunc (entity));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal void ExecuteNonQuery (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
					{
						base.ExecuteVoidMethod ("ExecuteNonQuery", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							}
						}, () => _mixinInstance.ExecuteNonQuery (spName, sParams));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal void ExecuteReader (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams, global::System.Action<global::System.Data.SqlClient.SqlDataReader> readerCallback)
					{
						base.ExecuteVoidMethod ("ExecuteReader", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "readerCallback",
								Type = typeof(global::System.Action<global::System.Data.SqlClient.SqlDataReader>),
								Value = readerCallback
							}
						}, () => _mixinInstance.ExecuteReader (spName, sParams, readerCallback));
					}
					[global::System.Diagnostics.DebuggerStepThrough]
					internal global::System.Object ExecuteScalar (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
					{
						return base.ExecuteMethod ("ExecuteScalar", new global::System.Collections.Generic.List<global::CopaceticSoftware.pMixins.Interceptors.Parameter> {
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "spName",
								Type = typeof(global::System.String),
								Value = spName
							},
							new global::CopaceticSoftware.pMixins.Interceptors.Parameter {
								Name = "sParams",
								Type = typeof(global::System.Data.SqlClient.SqlParameter[]),
								Value = sParams
							}
						}, () => _mixinInstance.ExecuteScalar (spName, sParams));
					}
				}
			}
		}
		private __Mixins ____mixins;
		private __Mixins __mixins {
			get {
				if (null == ____mixins) {
					lock (__Mixins.____Lock) {
						if (null == ____mixins) {
							____mixins = new __Mixins (this);
							____mixins.__ActivateMixinDependencies (this);
						}
					}
				}
				return ____mixins;
			}
		}
		global::pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity> global::CopaceticSoftware.pMixins.ConversionOperators.IContainMixin<global::pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>>.MixinInstance {
			get {
				return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__._mixinInstance;
			}
		}
		global::pMixins.Mvc.Recipes.Repository.SqlCreateMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity> global::CopaceticSoftware.pMixins.ConversionOperators.IContainMixin<global::pMixins.Mvc.Recipes.Repository.SqlCreateMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>>.MixinInstance {
			get {
				return __mixins.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__._mixinInstance;
			}
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public static implicit operator global::pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity> (MyEntityRepository target) {
			return target.__mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__._mixinInstance;
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public static implicit operator global::pMixins.Mvc.Recipes.Repository.SqlCreateMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity> (MyEntityRepository target) {
			return target.__mixins.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__._mixinInstance;
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected virtual global::pMixins.Mvc.Recipes.Repository.MyEntity MapEntity (global::System.Data.SqlClient.SqlDataReader reader)
		{
			return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.MapEntity (reader);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public virtual global::pMixins.Mvc.Recipes.Repository.MyEntity ReadById (global::System.Int32 id)
		{
			return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ReadById (id);
		}
		protected virtual global::System.String ReadByIdStoredProcedureName {
			get {
				return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ReadByIdStoredProcedureName;
			}
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected void ExecuteNonQuery (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			__mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ExecuteNonQuery (spName, sParams);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected void ExecuteReader (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams, global::System.Action<global::System.Data.SqlClient.SqlDataReader> readerCallback)
		{
			__mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ExecuteReader (spName, sParams, readerCallback);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected global::System.Object ExecuteScalar (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ExecuteScalar (spName, sParams);
		}
		protected virtual global::System.String ConnectionString {
			get {
				return __mixins.pMixins_Mvc_Recipes_Repository_SqlReadByIdMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.ConnectionString;
			}
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected virtual global::System.Data.SqlClient.SqlParameter[] MapEntityToSqlParameters (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
		{
			return __mixins.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.MapEntityToSqlParameters (entity);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public virtual global::System.Boolean Create (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
		{
			return __mixins.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.Create (entity);
		}
		protected virtual global::System.String CreateStoredProcedureName {
			get {
				return __mixins.pMixins_Mvc_Recipes_Repository_SqlCreateMixin__pMixins_Mvc_Recipes_Repository_MyEntity__.CreateStoredProcedureName;
			}
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.__Shared
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute ("pMixin", "0.5.1.382")]
	public interface ISharedRequirements
	{
		global::System.String ConnectionStringImplementation {
			get;
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute ("pMixin", "0.5.1.382")]
	public interface ISqlReadByIdMixin__MyEntity__Requirements : global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.__Shared.ISharedRequirements
	{
		[global::System.Diagnostics.DebuggerStepThrough]
		global::pMixins.Mvc.Recipes.Repository.MyEntity MapEntityImplementation (global::System.Data.SqlClient.SqlDataReader reader);
		global::System.String ReadByIdStoredProcedureNameImplementation {
			get;
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin
{
	public abstract class SqlReadByIdMixin__MyEntity__ProtectedMembersWrapper : global::pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>
	{
		public SqlReadByIdMixin__MyEntity__ProtectedMembersWrapper () : base ()
		{
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new void ExecuteNonQuery (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			base.ExecuteNonQuery (spName, sParams);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new void ExecuteReader (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams, global::System.Action<global::System.Data.SqlClient.SqlDataReader> readerCallback)
		{
			base.ExecuteReader (spName, sParams, readerCallback);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new global::System.Object ExecuteScalar (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			return base.ExecuteScalar (spName, sParams);
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin
{
	public class SqlReadByIdMixin__MyEntity__AbstractWrapper : SqlReadByIdMixin__MyEntity__ProtectedMembersWrapper
	{
		private readonly global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.ISqlReadByIdMixin__MyEntity__Requirements _target;
		public SqlReadByIdMixin__MyEntity__AbstractWrapper (global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlReadByIdMixin.ISqlReadByIdMixin__MyEntity__Requirements target) : base ()
		{
			_target = target;
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected override global::pMixins.Mvc.Recipes.Repository.MyEntity MapEntity (global::System.Data.SqlClient.SqlDataReader reader)
		{
			return _target.MapEntityImplementation (reader);
		}
		protected override global::System.String ReadByIdStoredProcedureName {
			get {
				return _target.ReadByIdStoredProcedureNameImplementation;
			}
		}
		protected override global::System.String ConnectionString {
			get {
				return _target.ConnectionStringImplementation;
			}
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public global::pMixins.Mvc.Recipes.Repository.MyEntity MapEntity_Public (global::System.Data.SqlClient.SqlDataReader reader)
		{
			return this.MapEntity (reader);
		}
		public global::System.String ReadByIdStoredProcedureName_Public {
			get {
				return this.ReadByIdStoredProcedureName;
			}
		}
		public global::System.String ConnectionString_Public {
			get {
				return this.ConnectionString;
			}
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute ("pMixin", "0.5.1.382")]
	public interface ISqlCreateMixin__MyEntity__Requirements : global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.__Shared.ISharedRequirements
	{
		[global::System.Diagnostics.DebuggerStepThrough]
		global::System.Data.SqlClient.SqlParameter[] MapEntityToSqlParametersImplementation (global::pMixins.Mvc.Recipes.Repository.MyEntity entity);
		global::System.String CreateStoredProcedureNameImplementation {
			get;
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin
{
	public abstract class SqlCreateMixin__MyEntity__ProtectedMembersWrapper : global::pMixins.Mvc.Recipes.Repository.SqlCreateMixin<global::pMixins.Mvc.Recipes.Repository.MyEntity>
	{
		public SqlCreateMixin__MyEntity__ProtectedMembersWrapper () : base ()
		{
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new void ExecuteNonQuery (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			base.ExecuteNonQuery (spName, sParams);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new void ExecuteReader (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams, global::System.Action<global::System.Data.SqlClient.SqlDataReader> readerCallback)
		{
			base.ExecuteReader (spName, sParams, readerCallback);
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public new global::System.Object ExecuteScalar (global::System.String spName, global::System.Data.SqlClient.SqlParameter[] sParams)
		{
			return base.ExecuteScalar (spName, sParams);
		}
	}
}
namespace pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin
{
	public class SqlCreateMixin__MyEntity__AbstractWrapper : SqlCreateMixin__MyEntity__ProtectedMembersWrapper
	{
		private readonly global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.ISqlCreateMixin__MyEntity__Requirements _target;
		public SqlCreateMixin__MyEntity__AbstractWrapper (global::pMixins.AutoGenerated.pMixins.Mvc.Recipes.Repository.MyEntityRepository.pMixins.Mvc.Recipes.Repository.SqlCreateMixin.ISqlCreateMixin__MyEntity__Requirements target) : base ()
		{
			_target = target;
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		protected override global::System.Data.SqlClient.SqlParameter[] MapEntityToSqlParameters (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
		{
			return _target.MapEntityToSqlParametersImplementation (entity);
		}
		protected override global::System.String CreateStoredProcedureName {
			get {
				return _target.CreateStoredProcedureNameImplementation;
			}
		}
		protected override global::System.String ConnectionString {
			get {
				return _target.ConnectionStringImplementation;
			}
		}
		[global::System.Diagnostics.DebuggerStepThrough]
		public global::System.Data.SqlClient.SqlParameter[] MapEntityToSqlParameters_Public (global::pMixins.Mvc.Recipes.Repository.MyEntity entity)
		{
			return this.MapEntityToSqlParameters (entity);
		}
		public global::System.String CreateStoredProcedureName_Public {
			get {
				return this.CreateStoredProcedureName;
			}
		}
		public global::System.String ConnectionString_Public {
			get {
				return this.ConnectionString;
			}
		}
	}
}

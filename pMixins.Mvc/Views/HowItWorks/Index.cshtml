@using CopaceticSoftware.pMixins.Mvc.Extensions

@{
    ViewBag.Title = "How It Works";
}

<div class="container body-content">
   <div class="row">
        <div class="col-md-12">
            <h1>How <span class="logo-code">[<span class="typ">p</span>Mixins]</span> Works</h1>
            <p>
                By marking your class <code>partial</code>, <span class="logo-code">[<span class="typ">p</span>Mixins]</span>
                can create the
            </p>
            <pre class="prettyprint">
//Mixin - Class that contains members that should be injected into other classes.
public class Mixin
{
    // This method should be in several class
    public void Method(){ }
}
  
//Target (Note: That it is partial) - Add members from Mixin
[pMixin(Mixin = typeof(Mixin)]
public partial class Target{}
  
  
//Example of using Target
public class Consumer
{
    public void Example()
    {
        var target = new Target();
        
        // can call mixed in method
        target.Method();
        
        // can implicitly convert Target to Mixin
        Mixin m = new Target();
        m.Method();
    }
}
  
//Code Generated by pMixins Code Generator 
//This is a simplified version of the generated code.
//public partial class Target
//{
//     private Mixin _compositionInstance; 
//
//     public void Method()
//     {
//        // forward call to Mixin instance
//        _compositionInstance.Method();
//     }
//}
        </pre>
        </div>
    </div>

</div>

@{
    ViewBag.Title = "Motivation";
}

<div class="container body-content">
    <div class="row">
        <div class="col-md-12">
            <blockquote class="pull-right">
                <p>Inheritance is often useful, but more often overused.</p>
                <small>
                    Bernie Sumption <cite title="animator.js">
                        <a href="http://berniesumption.com/software/inheritance-is-evil-and-must-be-destroyed/">
                            animator.js
                        </a>
                    </cite>
                </small>
            </blockquote>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            <h1>Motivating <span class="logo-code ">[<span class="typ">p</span>Mixins]</span></h1>
            <p>
                <a href="http://stackoverflow.com/questions/15452377/c-sharp-object-composition-removing-boilerplate-code">C# Object Composition - Removing Boilerplate Code</a>
            </p>
            <p>
                In the middle of 2012 I was working for a consoulting company on a large asp.net application.
                Like many applications, this one needed to read and write from a datastore.  The application
                was built upon a 3rd party CMS platform, which provided a limited infrastructure for storing data.
                However, we were planning several additions that the built-in data storage api could not sufficently
                handle, so I was tasked with creating an infrastructure for accessing the database directly.
            </p>
            <p>
                I have always liked the <a href="http://martinfowler.com/eaaCatalog/repository.html">repository</a> pattern so I 
                went about implementing a class heirarchy to support it.  
            </p>
        </div>
    </div>
</div>